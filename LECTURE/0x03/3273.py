""" 입력
첫째 줄: 수열의 크기 n (1 <= n <= 1,000,000) 입력
둘째 줄: 수열 입력
셋째 줄: x (1 <= x <= 2,000,000) 입력 """
""" 출력
a_i + a_j = x (a <= i <= j <= n)을 만족하는 (a_i, a_j) 쌍의 개수를 출력"""

n = int(input())
arr = list(map(int, input().split()))
x = int(input())

exist = [0] * (x - 1)
i_j = 0
for i in arr:
    if x > i:
        if exist[x - i - 1] == 1:
            i_j += 1
        else:
            exist[i - 1] += 1
print(i_j)

""" 시간복잡도: O(n)
- 수열 arr을 한 번 순회하며 각 숫자에 대해 x - i가 존재하는지 확인함
- 존재 여부는 O(1) 배열 조회로 처리
- 총 n개의 숫자에 대해 상수 시간 연산 수행 → O(n)"""
""" 공간복잡도: O(x)
- 존재 여부를 저장하는 배열 exist의 크기는 (x - 1)
- x의 최댓값은 2,000,000이므로 최악의 경우 배열 크기가 약 2백만
- 이 경우 메모리 사용량은 약 2MB 수준"""